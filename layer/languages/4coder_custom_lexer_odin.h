#if !defined(FCODER_LEX_GEN_HAND_WRITTEN_TYPES)
#define FCODER_LEX_GEN_HAND_WRITTEN_TYPES

struct Lexeme_Table_Value{
    Token_Base_Kind base_kind;
    u16 sub_kind;
};

struct Lexeme_Table_Lookup{
    b32 found_match;
    Token_Base_Kind base_kind;
    u16 sub_kind;
};

#endif
typedef u16 Token_Odin_Kind;
enum{
TokenOdinKind_EOF = 0,
TokenOdinKind_Whitespace = 1,
TokenOdinKind_LexError = 2,
TokenOdinKind_BlockComment = 3,
TokenOdinKind_LineComment = 4,
TokenOdinKind_Backslash = 5,
TokenOdinKind_LiteralInteger = 6,
TokenOdinKind_LiteralIntegerBin = 7,
TokenOdinKind_LiteralIntegerOct = 8,
TokenOdinKind_LiteralIntegerHex = 9,
TokenOdinKind_LiteralFloat32 = 10,
TokenOdinKind_LiteralFloat64 = 11,
TokenOdinKind_LiteralComplex = 12,
TokenOdinKind_LiteralString = 13,
TokenOdinKind_LiteralCharacter = 14,
TokenOdinKind_KeywordGeneric = 15,
TokenOdinKind_DirectiveGeneric = 16,
TokenOdinKind_AttributeGeneric = 17,
TokenOdinKind_BraceOp = 18,
TokenOdinKind_BraceCl = 19,
TokenOdinKind_ParenOp = 20,
TokenOdinKind_BrackOp = 21,
TokenOdinKind_ParenCl = 22,
TokenOdinKind_BrackCl = 23,
TokenOdinKind_Semicolon = 24,
TokenOdinKind_Comma = 25,
TokenOdinKind_Plus = 26,
TokenOdinKind_Minus = 27,
TokenOdinKind_Star = 28,
TokenOdinKind_Div = 29,
TokenOdinKind_Mod = 30,
TokenOdinKind_ModMod = 31,
TokenOdinKind_Or = 32,
TokenOdinKind_Xor = 33,
TokenOdinKind_And = 34,
TokenOdinKind_AndXor = 35,
TokenOdinKind_LeftLeft = 36,
TokenOdinKind_RightRight = 37,
TokenOdinKind_Less = 38,
TokenOdinKind_LessEq = 39,
TokenOdinKind_Grtr = 40,
TokenOdinKind_GrtrEq = 41,
TokenOdinKind_EqEq = 42,
TokenOdinKind_NotEq = 43,
TokenOdinKind_AndAnd = 44,
TokenOdinKind_OrOr = 45,
TokenOdinKind_Not = 46,
TokenOdinKind_Carrot = 47,
TokenOdinKind_Dot = 48,
TokenOdinKind_Ternary = 49,
TokenOdinKind_Colon = 50,
TokenOdinKind_Eq = 51,
TokenOdinKind_PlusEq = 52,
TokenOdinKind_MinusEq = 53,
TokenOdinKind_StarEq = 54,
TokenOdinKind_DivEq = 55,
TokenOdinKind_ModEq = 56,
TokenOdinKind_LeftLeftEq = 57,
TokenOdinKind_RightRightEq = 58,
TokenOdinKind_ColonEq = 59,
TokenOdinKind_MinusRight = 60,
TokenOdinKind_DotDot = 61,
TokenOdinKind_DotDotEq = 62,
TokenOdinKind_DotDotLeft = 63,
TokenOdinKind_Pound = 64,
TokenOdinKind_At = 65,
TokenOdinKind_Dollar = 66,
TokenOdinKind_Uninitialized = 67,
TokenOdinKind_Asm = 68,
TokenOdinKind_AutoCast = 69,
TokenOdinKind_BitSet = 70,
TokenOdinKind_Break = 71,
TokenOdinKind_Case = 72,
TokenOdinKind_Cast = 73,
TokenOdinKind_Context = 74,
TokenOdinKind_Continue = 75,
TokenOdinKind_Defer = 76,
TokenOdinKind_Distinct = 77,
TokenOdinKind_Do = 78,
TokenOdinKind_Dynamic = 79,
TokenOdinKind_Else = 80,
TokenOdinKind_Enum = 81,
TokenOdinKind_Fallthrough = 82,
TokenOdinKind_For = 83,
TokenOdinKind_Foreign = 84,
TokenOdinKind_If = 85,
TokenOdinKind_Import = 86,
TokenOdinKind_In = 87,
TokenOdinKind_Map = 88,
TokenOdinKind_NotIn = 89,
TokenOdinKind_OrElse = 90,
TokenOdinKind_OrReturn = 91,
TokenOdinKind_Package = 92,
TokenOdinKind_Proc = 93,
TokenOdinKind_Return = 94,
TokenOdinKind_Struct = 95,
TokenOdinKind_Switch = 96,
TokenOdinKind_Transmute = 97,
TokenOdinKind_Typeid = 98,
TokenOdinKind_Union = 99,
TokenOdinKind_Using = 100,
TokenOdinKind_When = 101,
TokenOdinKind_Where = 102,
TokenOdinKind_SizeOf = 103,
TokenOdinKind_Nil = 104,
TokenOdinKind_Byte = 105,
TokenOdinKind_Rune = 106,
TokenOdinKind_String = 107,
TokenOdinKind_Cstring = 108,
TokenOdinKind_Bool = 109,
TokenOdinKind_B8 = 110,
TokenOdinKind_B16 = 111,
TokenOdinKind_B32 = 112,
TokenOdinKind_B64 = 113,
TokenOdinKind_U8 = 114,
TokenOdinKind_U16 = 115,
TokenOdinKind_U32 = 116,
TokenOdinKind_U64 = 117,
TokenOdinKind_U128 = 118,
TokenOdinKind_I8 = 119,
TokenOdinKind_I16 = 120,
TokenOdinKind_I32 = 121,
TokenOdinKind_I64 = 122,
TokenOdinKind_I128 = 123,
TokenOdinKind_F16 = 124,
TokenOdinKind_F32 = 125,
TokenOdinKind_F64 = 126,
TokenOdinKind_Complex32 = 127,
TokenOdinKind_Complex64 = 128,
TokenOdinKind_Complex128 = 129,
TokenOdinKind_Quaternion64 = 130,
TokenOdinKind_Quaternion128 = 131,
TokenOdinKind_Quaternion256 = 132,
TokenOdinKind_Int = 133,
TokenOdinKind_Uint = 134,
TokenOdinKind_Uintptr = 135,
TokenOdinKind_Rawptr = 136,
TokenOdinKind_Any = 137,
TokenOdinKind_U16le = 138,
TokenOdinKind_U32le = 139,
TokenOdinKind_U64le = 140,
TokenOdinKind_U128le = 141,
TokenOdinKind_I16le = 142,
TokenOdinKind_I32le = 143,
TokenOdinKind_I64le = 144,
TokenOdinKind_I128le = 145,
TokenOdinKind_U16be = 146,
TokenOdinKind_U32be = 147,
TokenOdinKind_U64be = 148,
TokenOdinKind_U128be = 149,
TokenOdinKind_I16be = 150,
TokenOdinKind_I32be = 151,
TokenOdinKind_I64be = 152,
TokenOdinKind_I128be = 153,
TokenOdinKind_F16le = 154,
TokenOdinKind_F32le = 155,
TokenOdinKind_F64le = 156,
TokenOdinKind_F16be = 157,
TokenOdinKind_F32be = 158,
TokenOdinKind_F64be = 159,
TokenOdinKind_LiteralTrue = 160,
TokenOdinKind_LiteralFalse = 161,
TokenOdinKind_Identifier = 162,
TokenOdinKind_Assert = 163,
TokenOdinKind_Panic = 164,
TokenOdinKind_BoundsCheck = 165,
TokenOdinKind_NoBoundsCheck = 166,
TokenOdinKind_Align = 167,
TokenOdinKind_Packed = 168,
TokenOdinKind_RawUnion = 169,
TokenOdinKind_NoNil = 170,
TokenOdinKind_Soa = 171,
TokenOdinKind_Simd = 172,
TokenOdinKind_Config = 173,
TokenOdinKind_Partial = 174,
TokenOdinKind_NoAlias = 175,
TokenOdinKind_AnyInt = 176,
TokenOdinKind_CallerLocation = 177,
TokenOdinKind_Location = 178,
TokenOdinKind_Procedure = 179,
TokenOdinKind_File = 180,
TokenOdinKind_Line = 181,
TokenOdinKind_CVararg = 182,
TokenOdinKind_ByPtr = 183,
TokenOdinKind_OptionalOk = 184,
TokenOdinKind_OptionalAllocatorError = 185,
TokenOdinKind_Type = 186,
TokenOdinKind_Defined = 187,
TokenOdinKind_Load = 188,
TokenOdinKind_LoadOr = 189,
TokenOdinKind_LoadHash = 190,
TokenOdinKind_ForceInline = 191,
TokenOdinKind_AtPrivate = 192,
TokenOdinKind_AtRequire = 193,
TokenOdinKind_AtLinkName = 194,
TokenOdinKind_AtLinkPrefix = 195,
TokenOdinKind_AtExport = 196,
TokenOdinKind_AtLinkage = 197,
TokenOdinKind_AtDefaultCallingConvention = 198,
TokenOdinKind_AtLinkSection = 199,
TokenOdinKind_AtExtraLinkerFlags = 200,
TokenOdinKind_AtDeferredIn = 201,
TokenOdinKind_AtDeferredOut = 202,
TokenOdinKind_AtDeferredInOut = 203,
TokenOdinKind_AtDeferredNone = 204,
TokenOdinKind_AtDeprecated = 205,
TokenOdinKind_AtRequireResults = 206,
TokenOdinKind_AtWarning = 207,
TokenOdinKind_AtDisabled = 208,
TokenOdinKind_AtInit = 209,
TokenOdinKind_AtCold = 210,
TokenOdinKind_AtOptimizationMode = 211,
TokenOdinKind_AtStatic = 212,
TokenOdinKind_AtThreadLocal = 213,
TokenOdinKind_AtBuiltin = 214,
TokenOdinKind_AtObjcName = 215,
TokenOdinKind_AtObjcType = 216,
TokenOdinKind_AtObjcIsClassMethod = 217,
TokenOdinKind_AtRequireTargetFeature = 218,
TokenOdinKind_AtEnableTargetFeature = 219,
TokenOdinKind_COUNT = 220,
};
char *token_odin_kind_names[] = {
"EOF",
"Whitespace",
"LexError",
"BlockComment",
"LineComment",
"Backslash",
"LiteralInteger",
"LiteralIntegerBin",
"LiteralIntegerOct",
"LiteralIntegerHex",
"LiteralFloat32",
"LiteralFloat64",
"LiteralComplex",
"LiteralString",
"LiteralCharacter",
"KeywordGeneric",
"DirectiveGeneric",
"AttributeGeneric",
"BraceOp",
"BraceCl",
"ParenOp",
"BrackOp",
"ParenCl",
"BrackCl",
"Semicolon",
"Comma",
"Plus",
"Minus",
"Star",
"Div",
"Mod",
"ModMod",
"Or",
"Xor",
"And",
"AndXor",
"LeftLeft",
"RightRight",
"Less",
"LessEq",
"Grtr",
"GrtrEq",
"EqEq",
"NotEq",
"AndAnd",
"OrOr",
"Not",
"Carrot",
"Dot",
"Ternary",
"Colon",
"Eq",
"PlusEq",
"MinusEq",
"StarEq",
"DivEq",
"ModEq",
"LeftLeftEq",
"RightRightEq",
"ColonEq",
"MinusRight",
"DotDot",
"DotDotEq",
"DotDotLeft",
"Pound",
"At",
"Dollar",
"Uninitialized",
"Asm",
"AutoCast",
"BitSet",
"Break",
"Case",
"Cast",
"Context",
"Continue",
"Defer",
"Distinct",
"Do",
"Dynamic",
"Else",
"Enum",
"Fallthrough",
"For",
"Foreign",
"If",
"Import",
"In",
"Map",
"NotIn",
"OrElse",
"OrReturn",
"Package",
"Proc",
"Return",
"Struct",
"Switch",
"Transmute",
"Typeid",
"Union",
"Using",
"When",
"Where",
"SizeOf",
"Nil",
"Byte",
"Rune",
"String",
"Cstring",
"Bool",
"B8",
"B16",
"B32",
"B64",
"U8",
"U16",
"U32",
"U64",
"U128",
"I8",
"I16",
"I32",
"I64",
"I128",
"F16",
"F32",
"F64",
"Complex32",
"Complex64",
"Complex128",
"Quaternion64",
"Quaternion128",
"Quaternion256",
"Int",
"Uint",
"Uintptr",
"Rawptr",
"Any",
"U16le",
"U32le",
"U64le",
"U128le",
"I16le",
"I32le",
"I64le",
"I128le",
"U16be",
"U32be",
"U64be",
"U128be",
"I16be",
"I32be",
"I64be",
"I128be",
"F16le",
"F32le",
"F64le",
"F16be",
"F32be",
"F64be",
"LiteralTrue",
"LiteralFalse",
"Identifier",
"Assert",
"Panic",
"BoundsCheck",
"NoBoundsCheck",
"Align",
"Packed",
"RawUnion",
"NoNil",
"Soa",
"Simd",
"Config",
"Partial",
"NoAlias",
"AnyInt",
"CallerLocation",
"Location",
"Procedure",
"File",
"Line",
"CVararg",
"ByPtr",
"OptionalOk",
"OptionalAllocatorError",
"Type",
"Defined",
"Load",
"LoadOr",
"LoadHash",
"ForceInline",
"AtPrivate",
"AtRequire",
"AtLinkName",
"AtLinkPrefix",
"AtExport",
"AtLinkage",
"AtDefaultCallingConvention",
"AtLinkSection",
"AtExtraLinkerFlags",
"AtDeferredIn",
"AtDeferredOut",
"AtDeferredInOut",
"AtDeferredNone",
"AtDeprecated",
"AtRequireResults",
"AtWarning",
"AtDisabled",
"AtInit",
"AtCold",
"AtOptimizationMode",
"AtStatic",
"AtThreadLocal",
"AtBuiltin",
"AtObjcName",
"AtObjcType",
"AtObjcIsClassMethod",
"AtRequireTargetFeature",
"AtEnableTargetFeature",
};
